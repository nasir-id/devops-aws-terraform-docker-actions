name: 'Terraform Plan'

on:
  push:
    branches: [ '**' ]  # Triggered on push to any branch
    paths:
      - 'terraform/services/**.tf'  # Any Terraform file in any subdirectory
      - 'terraform/services/**.tfvars'  # Any Terraform state file in any subdirectory
      - '.github/workflows/plan.yml'
  pull_request:
    branches:
      - '**'
    paths:
      - 'services/**.tf'  # Any Terraform file in any subdirectory
      - 'services/**.tfvars'  # Any Terraform state file in any subdirectory
      - '.github/workflows/plan.yml'
    types: [opened, synchronize, reopened]

env:
  TF_VERSION: '1.5.7'  # Specify Terraform version
  AWS_REGION: 'ap-southeast-1'  # Update with your AWS region

jobs:
  detect-changed-dirs:
    name: Detect Changed Directories
    runs-on: ubuntu-latest
    outputs:
      dirs: ${{ steps.find-dirs.outputs.dirs }}
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history to properly detect changes

      - name: Find Changed Terraform Directories
        id: find-dirs
        run: |
          # For PRs
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep -E '^terraform/services/.*\.(tf|tfvars)$' || echo "")
          # For push events
          else
            CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep -E '^terraform/services/.*\.(tf|tfvars)$' || echo "")
          fi
          
          # If workflow_dispatch, consider all directories under services/
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            DIRS=$(find services/ -type f -name "*.tf" -o -name "*.tfvars" | xargs dirname | sort -u | sed 's/^\.\///' | jq -R -s -c 'split("\n")[:-1]')
          # For regular events with changes
          elif [ -n "$CHANGED_FILES" ]; then
            DIRS=$(echo "$CHANGED_FILES" | xargs dirname | sort -u | jq -R -s -c 'split("\n")[:-1]')
          # No changes detected
          else
            DIRS="[]"
          fi
          
          echo "dirs=$DIRS" >> $GITHUB_OUTPUT
          echo "Changed directories: $DIRS"

  terraform-plan:
    name: Terraform Plan
    needs: detect-changed-dirs
    if: ${{ needs.detect-changed-dirs.outputs.dirs != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJSON(needs.detect-changed-dirs.outputs.dirs) }}
      fail-fast: false
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: ${{ matrix.directory }}
        run: terraform init

      - name: Terraform Validate
        working-directory: ${{ matrix.directory }}
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: ${{ matrix.directory }}
        run: terraform plan -no-color
        continue-on-error: true
        
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1